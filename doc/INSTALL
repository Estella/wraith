# $Id$

* The installation process has changed starting at version 1.0.11. 
* All commands and directories/ are assumed to be located/ran in the wraith root dir.

1. Pack settings
2. Compiling
3. Making bots

Step 1: Pack settings

The files listed here are all located in pack/, and will need to be saved for future compiles.
If you have pack.cff place it in pack/

pack.cfg(.sample):
 Simply edit it and change accordingly 
 Rename to pack.cfg when completed and make sure it is in pack/


Step 2: Compiling

For leaf build: ./build leaf
For hub build: ./build hub
To build both: ./build all
To compile a debug version of the pack, add -d in as a option before the type.
 ie, ./build -d leaf

During the compile process many warnings may appear on screen, ignore them. Only report ERRORS please.
After the compile process is finished, the binaries will be placed in wraith.OS.version.tgz.
 The OS and version are dynamic depending on the pack build, type 'ls' to find exact name.


Step 3: Making bots

NOTE: conf files from versions older than 1.0.11 still work, but improvements have been made.

read over doc/conf.example.
This file can be made by the bot binary with ./binary -g filename
Edit the conf (conf.example or the generated one, doesnt matter)
For leaf bots, encrypt the conf as '~/.ssh/.known_hosts'
For hub bots, encrypt the conf as 'conf'
Thie is done by: ./binary -e infile outfile
tar -czvf somebot.tgz .known_hosts binary
(or for hub): tar -czvf somehub.tgz conf binary
then upload somebot.tgz to whatever shell..

LEAF:
untar, mkdir ~/.ssh;mv .known_hosts ~/.ssh/.known_hosts
then just run the leaf binary, it will move itself to: ~/.sshrc

HUB:
untar, ./binary 
This is assuming the conf is already encrypted as 'conf', if not, move it to 'conf'.
The binary can be named ANYTHING, just as long as the encrypted conf is known as 'conf' in the same dir

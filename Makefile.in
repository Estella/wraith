#
#		DO NOT EDIT THIS FILE 
#
# $Id$

SHELL = @SHELL@
top_srcdir = @top_srcdir@
srcdir = @srcdir@
VPATH = @srcdir@

@SET_MAKE@
VERSION = @VERSION@
DISTRIB = wraith-@VERSION@
CCDEPMODE = @CCDEPMODE@
LEAFEXEC = leaf@EXEEXT@
HUBEXEC = hub@EXEEXT@
DISTROFILES = config.h.in doc/ misc/ scripts/ ChangeLog Makefile.in build configure pack/ src/
EXCLUDES = pack/pack.cfg misc/ind doc/DEVEL src/Makefile src/compat/Makefile src/mod/Makefile \
           src/crypto/Makefile src/crypto/.deps src/crypto/.cvsignore \
           src/mod/dns.mod/Makefile src/mod/*.mod/.deps/ src/mod/*.mod/.cvsignore \
           src/.deps src/compat/.deps misc/commit misc/grep autotools/ \
           config.cache config.log config.status config.h stamp.* misc/.cvsignore src/compat/.cvsignore \
           src/mod/.cvsignore src/.cvsignore .cvsignore misc/commit misc/fstrings \
           misc/plainh misc/grep misc/cp.sh

# defaults
CXX = @DISTCC@ @CXX@ -march=i486
LD = @DISTCC@ @CXX@
CCDEBUG = @DISTCC@ @CCDEBUG@
LDDEBUG = @DISTCC@ @CCDEBUG@
STRIP = @STRIP@

#LIBS = @LIBS@ @ZLIB@ @SSL@ @RESLIB@
LIBS = @LIBS@ @ZLIB@ @RESLIB@

DEBCXXFLAGS = -DDEBUG_ASSERT -DDEBUG_MEM -Dinline= -fno-inline -g3 -ggdb3
CFLGS = @GCC3@
_CFLGS = -fno-strict-aliasing -W -Wformat \
#-Wshadow -Wnested-externs -Wno-format-y2k \
#-Wlarger-than-6608 -Wpointer-arith -Wcast-align \
#-Waggregate-return -Wbad-function-cast \
#-Wlong-long @GCC3@

#-Wmissing-noreturn
#-Wunused-parameter
#-Wwrite-strings
#-Wconversion
#-Wtraditional

MAKEFLAGS = -s -j4

MAKE_LEAF = $(MAKE) 'MAKE=$(MAKE)' 'CXX=$(CXX)' 'LD=$(LD)' \
'CCDEPMODE=$(CCDEPMODE)' \
'STRIP=$(STRIP)' 'CFLGS=$(CFLGS) -DLEAF' \
'LIBS=$(LIBS)' 'EGGEXEC=$(LEAFEXEC)' 'EGGBUILD=(leaf)'

MAKE_DLEAF = $(MAKE) 'MAKE=$(MAKE)' 'CXX=$(CCDEBUG)' 'LD=$(LDDEBUG) -g' \
'CCDEPMODE=$(CCDEPMODE)' \
'STRIP=touch' 'CFLGS=$(DEBCXXFLAGS) -DLEAF $(CFLGS)' \
'LIBS=$(LIBS)' 'EGGEXEC=$(LEAFEXEC)' 'EGGBUILD=(debug leaf)' 

MAKE_HUB = $(MAKE) 'MAKE=$(MAKE)' 'CXX=$(CXX)' 'LD=$(LD)' \
'CCDEPMODE=$(CCDEPMODE)' \
'STRIP=$(STRIP)' 'CFLGS=$(CFLGS) -DHUB' \
'LIBS=$(LIBS)' 'EGGEXEC=$(HUBEXEC)' 'EGGBUILD=(hub)' 

MAKE_DHUB = $(MAKE) 'MAKE=$(MAKE)' 'CXX=$(CCDEBUG)' 'LD=$(LDDEBUG) -g' \
'CCDEPMODE=$(CCDEPMODE)' \
'STRIP=touch' 'CFLGS=$(DEBCXXFLAGS) -DHUB $(CFLGS)' \
'LIBS=$(LIBS)' 'EGGEXEC=$(HUBEXEC)' 'EGGBUILD=(debug hub)'

MAKE_UTILS = $(MAKE) 'MAKE=$(MAKE)' 'CXX=$(CCDEBUG)' 'STRIP=touch' \
'CCDEPMODE=$(CCDEPMODE)' \
'CFLGS=$(DEBCXXFLAGS) $(CFLGS)' 'LIBS=$(LIBS)' 'LD=$(LDDEBUG) -g'

MAKE_UTILS_NR = $(MAKE) 'CXX=$(CXX)' 'STRIP=touch' \
'CCDEPMODE=$(CCDEPMODE)' \
'CFLGS=$(DEBCXXFLAGS) $(CFLGS)' 'LIBS=$(LIBS)' 'LD=$(LD) -g'

MAKE_CONFIG = $(MAKE) 'MAKE=$(MAKE)'

all:
	echo ""
	echo "Use the build script"
	echo ""

cleanutils:
	@rm -f src/stringfix src/sorthelp src/makehelp

clean:  cleanutils
	+@cd src && $(MAKE) clean
	+@cd src/compat && $(MAKE) clean
	+@cd src/crypto && $(MAKE) clean
	+@cd src/mod && $(MAKE) distclean
	@rm -f $(HUBEXEC) $(LEAFEXEC) *.stamp *~ src/*~ configure.temp .mangled
	@rm -f $(HUBEXEC).* $(LEAFEXEC).* src/help.h src/response.h src/responses.h utctime

distclean: clean
	@rm -f Makefile src/Makefile src/compat/Makefile src/mod/Makefile src/crypto/Makefile
	@rm -f config.cache config.log config.status config.h stamp.*
	@rm -rf *-$(VERSION)/ autom4te.cache/ autoscan.log configure.scan
	@rm -rf src/.deps/ src/compat/.deps/ src/mod/*.mod/.deps/ src/crypto/.deps


distrib: clean
	@rm -rf $(DISTRIB)/
	@mkdir $(DISTRIB) && cp -r $(DISTROFILES) $(DISTRIB)
	@rm -f `find $(DISTRIB)/ \( -name '*~' -o -name '*#' -o -name '*.orig' -o -name '*.rej' -o -name '*.bak' \) -print`
	@rm -rf `find $(DISTRIB)/ \( -name 'CVS' \) -print`
	@for s in $(EXCLUDES); \
	do \
	 rm -rf $(DISTRIB)/$$s; \
	done;
	@mfiles="`find $(DISTRIB)/src/ -name '*.h' -or -name '*.c'`"; \
	for s in $$mfiles; \
	do \
	 mangle -rnw $$s > /dev/null 2>&1;\
	done

tar: distrib
	tar -czvf $(DISTRIB).tgz $(DISTRIB)/
	ls -al $(DISTRIB).tgz
#	rm -rf $(DISTRIB)/
#	cd ../ && rm -rf distrib/

indent:
	@ifiles="`find src -name '*.h' -or -name '*.c'`"; \
	for s in $$ifiles; \
	do \
	 indent $$s; \
	done

sort: sorthelp
	@cp -f misc/help.txt misc/help.bak
	@(if test "x`tail -n 1 misc/help.txt`" != "x::end"; then \
	echo "::end" >> misc/help.txt; \
	fi)
#	@(sed misc/help.txt -e "s/^$$/ /" > help~ && mv -f help~ misc/help.txt) || rm -f help~
	@(sed -r -e :a -e 's/^$$/ /' -e '$$!N;s/^ \n:/:/;ta' -e 'P;D' misc/help.txt > help~ && mv -f help~ misc/help.txt) || rm -f help~
	@cp -f misc/help.txt help.txt~
	@(src/sorthelp misc/help.txt misc/help.txt || (cp -f help.txt~ misc/help.txt; echo "Sort failed, restoring backup."))
	@rm -f help.txt~

help: makehelp stringfix
	@src/makehelp misc/help.txt src/help.h.tmp~
	@(if [ ! -f src/help.h ]; then \
	touch src/help.h; \
	fi)
	@src/stringfix src/help.h.tmp~ src/help.h~ 1
	@(if test "x`diff -qurN src/help.h~ src/help.h`" != "x"; then \
	cp -f src/help.h~ src/help.h; \
	fi)

res: makeres
	@src/makeres misc/responses.txt src/ 1
	@(if [ ! -f src/response.h ]; then \
	touch src/response.h; \
	fi)
	@(if [ ! -f src/responses.h ]; then \
	touch src/responses.h; \
	fi)
	@(if test "x`diff -qurN src/response.h~ src/response.h`" != "x"; then \
	cp -f src/response.h~ src/response.h; \
	fi)
	@(if test "x`diff -qurN src/responses.h~ src/responses.h`" != "x"; then \
	cp -f src/responses.h~ src/responses.h; \
	fi)

stringfix: src/stringfix.c config.h
	+@cd src && ${MAKE_UTILS} stringfix

makeres: src/makeres.c
	+@cd src && ${MAKE_UTILS} makeres

makehelp: src/makehelp.c
	+@cd src && ${MAKE_UTILS} makehelp

sorthelp: src/sorthelp.c
	+@cd src && ${MAKE_UTILS} sorthelp

utils: stringfix makehelp

crypto:
	+@cd src/crypto && ${MAKE_UTILS} crypto

general: help res

leaf:	general
	@echo ""
	@echo "Making leaf"
	@echo ""
	@./misc/maketype leaf
	@echo ""
	+@cd src/mod && $(MAKE_LEAF) static
	+@cd src && $(MAKE_LEAF) $(LEAFEXEC)
	@echo ""

dleaf:  general
	@echo ""
	@echo "Making debug leaf"
	@echo ""
	@./misc/maketype leaf
	@echo ""
	+@cd src/mod && $(MAKE_DLEAF) static
	+@cd src && $(MAKE_DLEAF) $(LEAFEXEC)
	@echo ""

hub:	general
	@echo ""
	@echo "Making hub"
	@echo ""
	@./misc/maketype hub
	@echo ""
	+@cd src/mod && $(MAKE_HUB) static
	+@cd src && $(MAKE_HUB) $(HUBEXEC)
	@echo ""

dhub:   general
	@echo ""
	@echo "Making debug hub"
	@echo ""
	@./misc/maketype hub
	@echo ""
	+@cd src/mod && $(MAKE_DHUB) static
	+@cd src && $(MAKE_DHUB) $(HUBEXEC)
	@echo ""

#safety hash

